//
//  PurchaseListConfigurator.swift
//  PurchaseList
//
//  Created by Cesar Brenes on 10/28/16.
//  Copyright (c) 2016 Cesar Brenes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension PurchaseListViewController: PurchaseListPresenterOutput{
    func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?){
        router.passDataToNextScene(segue: segue)
    }
}

extension PurchaseListInteractor: PurchaseListViewControllerOutput{
}

extension PurchaseListPresenter: PurchaseListInteractorOutput{
}

class PurchaseListConfigurator{
    // MARK: Object lifecycle
    
    class var sharedInstance: PurchaseListConfigurator{
        struct Static {
            static let instance =  PurchaseListConfigurator()
        }
        return Static.instance
    }
    
    // MARK: Configuration
    
    func configure(viewController: PurchaseListViewController){
        let router = PurchaseListRouter()
        router.viewController = viewController
        
        let presenter = PurchaseListPresenter()
        presenter.output = viewController
        
        let interactor = PurchaseListInteractor()
        interactor.output = presenter
        
        viewController.output = interactor
        viewController.router = router
    }
}
