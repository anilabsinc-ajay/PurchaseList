//
//  PurchaseListInteractor.swift
//  PurchaseList
//
//  Created by Cesar Brenes on 10/28/16.
//  Copyright (c) 2016 Cesar Brenes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol PurchaseListInteractorInput{
    func fetchItems(request:PurchaseList.FetchItems.Request)
    func requestDeleteItem(request: PurchaseList.Delete.Request)
}

protocol PurchaseListInteractorOutput{
    func presentFetchedItems(response:PurchaseList.FetchItems.Response)
    func presentDeleteItem(response: PurchaseList.Delete.Response)
}

class PurchaseListInteractor: PurchaseListInteractorInput{
    var output: PurchaseListInteractorOutput!
    var worker = ItemWorker(itemStore: ItemMemoryStore())
    var itemsArray: [Item] = []
    
    // MARK: Business logic
    
    func fetchItems(request:PurchaseList.FetchItems.Request){
        worker.fetchAllItems(completionHandler: {(items) in
             let response = PurchaseList.FetchItems.Response(items: items)
             itemsArray = items
             output.presentFetchedItems(response: response)
        })
    }
    
    func requestDeleteItem(request: PurchaseList.Delete.Request){
        worker.deleteItem(id: itemsArray[request.index].id!, completionHandler: {(error) in
            let successfully = error == nil ? true : false
            if successfully{
                itemsArray.remove(at: request.index)
            }
            let response = PurchaseList.Delete.Response(index: request.index, successfully: successfully)
            output.presentDeleteItem(response: response)
        })
    }
}
