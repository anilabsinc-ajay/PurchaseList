//
//  AddItemViewController.swift
//  PurchaseList
//
//  Created by Cesar Brenes on 11/2/16.
//  Copyright (c) 2016 Cesar Brenes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol AddItemViewControllerInput{
    func displayInsertItemError(viewModel: AddItem.Insert.ViewModel)
    func displayInsertItemSuccessfully(viewModel: AddItem.Insert.ViewModel)
}

protocol AddItemViewControllerOutput{
    func insertItem(request: AddItem.Insert.Request)
}

class AddItemViewController: UIViewController, AddItemViewControllerInput{
    var output: AddItemViewControllerOutput!
    var router: AddItemRouter!
    
    
    // MARK: OUTLETS
    @IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var quantityTextField: UITextField!
    
    
    // MARK: Object lifecycle
    
    override func awakeFromNib(){
        super.awakeFromNib()
        AddItemConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad(){
        super.viewDidLoad()
        title = "Add Item"
        addInsertBarButtonItemInTheNavigationController()
    }
    
    func addInsertBarButtonItemInTheNavigationController(){
        let insertButton = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.save, target: self, action: #selector(insertItem))
        navigationItem.rightBarButtonItem = insertButton
    }
    
   
    
    // MARK: Event handling
    func insertItem(){
        let request = AddItem.Insert.Request(name: nameTextField.text, quantity: quantityTextField.text)
        output.insertItem(request: request)
    }
  
    
    // MARK: Display logic
    
    
    func displayInsertItemError(viewModel: AddItem.Insert.ViewModel){
        present(viewModel.alert, animated: true)
    }
    
    func displayInsertItemSuccessfully(viewModel: AddItem.Insert.ViewModel){
        viewModel.alert.addAction(UIAlertAction(title: "OK", style: UIAlertActionStyle.default, handler: {(alert) in
            self.router.goToBackView()
        }))
       
        
         self.present(viewModel.alert, animated: true)
        
    }
}
