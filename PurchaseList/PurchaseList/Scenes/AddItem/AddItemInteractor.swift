//
//  AddItemInteractor.swift
//  PurchaseList
//
//  Created by Cesar Brenes on 11/2/16.
//  Copyright (c) 2016 Cesar Brenes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol AddItemInteractorInput{
    func insertItem(request: AddItem.Insert.Request)
}

protocol AddItemInteractorOutput{
    func presentInsertItem(response: AddItem.Insert.Response)
}

class AddItemInteractor: AddItemInteractorInput{
    var output: AddItemInteractorOutput!
    var worker = ItemWorker(itemStore: ItemMemoryStore())
    
    // MARK: Business logic
    
    func insertItem(request: AddItem.Insert.Request){
        let addItemWorker = AddItemWorker()
        let response = addItemWorker.createResponse(name: request.name, quantity: request.quantity)
        if response.0.result == .NoErrors{
            worker.createItem(item: response.1!, completionHandler: {(error) in
                if error == nil{
                    output.presentInsertItem(response: response.0)
                }
                else{
                    output.presentInsertItem(response: AddItem.Insert.Response(result: .ErrorSavingItem))
                }
            })
        }
        else{
            output.presentInsertItem(response: response.0)
        }
    }
}
